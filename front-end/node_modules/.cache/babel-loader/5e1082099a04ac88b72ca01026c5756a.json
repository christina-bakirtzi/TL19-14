{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\TL19-14\\\\front-end\\\\src\\\\AggregatedDate.js\";\nimport React, { Component } from 'react';\nimport 'react-dropdown/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport './Aggregated.css';\nimport App from './App';\nimport UserConfirmationModal from './UserConfirmationModal';\n\nfunction getJson_country(arr) {\n  var country = arr[0].AreaName;\n  return country;\n}\n\nfunction getJson_mapcode(arr) {\n  var map = arr[0].MapCode;\n  return map;\n}\n\nfunction getJson_day(arr) {\n  var da = arr[0].Day;\n  return da;\n}\n\nfunction getJson_year(arr) {\n  var y = arr[0].Year;\n  return y;\n}\n\nfunction getJson_month(arr) {\n  var m = arr[0].Month;\n  return m;\n}\n\nclass AggregatedDate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showdata = () => {\n      var testobj = localStorage.getItem('data');\n      var jsondata = JSON.parse(testobj); //Μπορει και να θέλετε με JSON.stringify\n\n      console.log(\"IS THIS REAL LIFE\");\n      console.log(jsondata);\n      console.log(JSON.stringify(JSON.parse(testobj))); //όπως εδω\n\n      return JSON.parse(testobj);\n    };\n\n    this.state = {\n      json: [],\n      country: getJson_country(this.showdata()),\n      mapcode: getJson_mapcode(this.showdata()),\n      day: getJson_day(this.showdata()),\n      month: getJson_month(this.showdata()),\n      year: getJson_year(this.showdata())\n    };\n  }\n\n  componentDidMount() {\n    this.setState(prevState => {\n      return {\n        json: this.showdata()\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Aggregated Generation Values in \", this.state.country, \" (\", this.state.mapcode, \") on \", this.state.day, \"/\", this.state.month, \"/\", this.state.year), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"DATE TIME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"PRODUCTION TYPE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"AGGREGATED GENERATION VALUE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"UPDATE TIME\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.json.map((data, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, data.DateTimeUTC), React.createElement(\"td\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, data.ProductionType), React.createElement(\"td\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, data.ActualGenerationOutputValue), React.createElement(\"td\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, data.UpdateTimeUTC));\n    }))));\n  }\n\n}\n\nexport default AggregatedDate;\n/*<td align=\"center\">{data.Year}</td>\r\n\t\t\t\t  <td align=\"center\">{data.Month}</td>-->\r\n\t\t\t\t  <td align=\"center\">{data.Day}</td>\r\n\t\t\t\t  <th>YEAR</th>\r\n\t\t\t<th>MONTH</th>\r\n\t\t\t<th>DAY</th>*/","map":{"version":3,"sources":["C:/Users/chris/Desktop/TL19-14/front-end/src/AggregatedDate.js"],"names":["React","Component","App","UserConfirmationModal","getJson_country","arr","country","AreaName","getJson_mapcode","map","MapCode","getJson_day","da","Day","getJson_year","y","Year","getJson_month","m","Month","AggregatedDate","constructor","props","showdata","testobj","localStorage","getItem","jsondata","JSON","parse","console","log","stringify","state","json","mapcode","day","month","year","componentDidMount","setState","prevState","render","data","i","DateTimeUTC","ProductionType","ActualGenerationOutputValue","UpdateTimeUTC"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'react-dropdown/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\nimport './Aggregated.css';\r\nimport App from './App';\r\nimport UserConfirmationModal from './UserConfirmationModal';\r\nfunction getJson_country(arr){\r\n    var country=arr[0].AreaName\r\n    return country;\r\n}\r\nfunction getJson_mapcode(arr){\r\n    var map=arr[0].MapCode\r\n    return map;\r\n}\r\nfunction getJson_day(arr){\r\n    var da=arr[0].Day\r\n    return da;\r\n}\r\nfunction getJson_year(arr){\r\n    var y=arr[0].Year\r\n    return y;\r\n}\r\nfunction getJson_month(arr){\r\n    var m=arr[0].Month\r\n    return m;\r\n}\r\nclass AggregatedDate extends Component {\r\n\tconstructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      json: [],\r\n\t  country: getJson_country(this.showdata()),\r\n\t  mapcode: getJson_mapcode(this.showdata()),\r\n      day: getJson_day(this.showdata()),\r\n      month: getJson_month(this.showdata()),\r\n      year: getJson_year(this.showdata())\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        json: this.showdata()\r\n      }\r\n    })\r\n  }\r\n\r\n    showdata=()=>{\r\n        var testobj=localStorage.getItem('data');\r\n        var jsondata=JSON.parse(testobj)   //Μπορει και να θέλετε με JSON.stringify\r\n        console.log(\"IS THIS REAL LIFE\")\r\n        console.log(jsondata);\r\n        console.log(JSON.stringify(JSON.parse(testobj)))  //όπως εδω\r\n\t\treturn JSON.parse(testobj);\r\n     }\r\n    render() {\r\n\t\treturn (\r\n\t\t  <div >\r\n\t\t  <h1 id='title'>Aggregated Generation Values in {this.state.country} ({this.state.mapcode}) on {this.state.day}/{this.state.month}/{this.state.year}</h1>\r\n\t\t\t<table>\r\n\t\t\t  <thead  align=\"center\">\r\n\t\t\t\t<th>DATE TIME</th>\r\n\t\t\t\t<th>PRODUCTION TYPE</th>\r\n\t\t\t\t<th>AGGREGATED GENERATION VALUE</th>\r\n\t\t\t\t<th>UPDATE TIME</th>\r\n\t\t\t  </thead>\r\n\t\t\t  <tbody>\r\n\t\t\t\t{this.state.json.map((data, i) => {\r\n\t\t\t\t  return (\r\n\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  <td align=\"center\">{data.DateTimeUTC}</td>\r\n\t\t\t\t\t  <td align=\"center\">{data.ProductionType}</td>\r\n\t\t\t\t\t  <td align=\"center\">{data.ActualGenerationOutputValue}</td>\r\n\t\t\t\t\t  <td align=\"center\">{data.UpdateTimeUTC}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t  )\r\n\t\t\t\t})}\r\n\t\t\t  </tbody>\r\n\t\t\t</table>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n}\r\n export default AggregatedDate;\r\n /*<td align=\"center\">{data.Year}</td>\r\n\t\t\t\t\t  <td align=\"center\">{data.Month}</td>-->\r\n\t\t\t\t\t  <td align=\"center\">{data.Day}</td>\r\n\t\t\t\t\t  <th>YEAR</th>\r\n\t\t\t\t<th>MONTH</th>\r\n\t\t\t\t<th>DAY</th>*/\r\n"]},"metadata":{},"sourceType":"module"}