{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\TL19-14\\\\front-end\\\\src\\\\ATL.js\";\nimport React, { Component } from 'react'; // import Select, { components } from 'react-select';\n// import Dropdown from 'react-dropdown';\n\nimport 'react-dropdown/style.css';\nimport { UserContext } from './UserContext';\nimport './ATL.css';\n\nclass ATL extends Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => {\n      var validation = true;\n      let tabletype = this.tabletype.value;\n      let country = this.country.value;\n      let resolution = this.resolution.value;\n      let date = this.date.value;\n      let productiontype;\n\n      if (this.state.prodtype != null) {\n        productiontype = this.state.prodtype;\n        console.log(productiontype);\n      }\n\n      let dateinput = this.state.dateinput;\n      var arr = dateinput.split('-');\n      var year = undefined,\n          month = undefined,\n          day = undefined;\n\n      if (arr.length == 3) {\n        year = arr[2];\n        month = arr[1];\n        day = arr[0];\n        dateinput = year + '-' + month + '-' + day;\n      } else if (arr.length == 2) {\n        year = arr[1];\n        month = arr[0];\n        dateinput = year + '-' + month;\n      } else if (arr.length == 1) {\n        year = arr[0];\n        dateinput = year;\n      }\n\n      console.log(month);\n      console.log(day);\n      console.log(year);\n      this.setState({\n        validation: true\n      });\n\n      if (day > 31 || day < 1 || month > 12 || month < 1 || year > 2020 || year < 1990) {\n        validation = false;\n        alert(\"Invalid date given\");\n      } else if (day !== undefined && (date === 'month' || date === 'year')) {\n        validation = false;\n        alert(\"Invalid date given \");\n      } else if (month !== undefined && date === 'year') {\n        validation = false;\n        alert(\"Invalid date given\");\n      } else if (date === 'date' && (day === undefined || month === undefined || year === undefined)) {\n        validation = false;\n        alert(\"Invalid date given\");\n      } else if (date === 'month' && (month === undefined || year === undefined)) {\n        validation = false;\n        alert(\"Invalid date given\");\n      } else if (date === 'year' && year === undefined) {\n        validation = false;\n        alert(\"Invalid date given\");\n      }\n\n      console.log(dateinput);\n      var url = 'https://b16d8614.ngrok.io//energy/api/' + this.state.tabletype + '/' + country + \"/\" + resolution + '/' + date + '/' + dateinput;\n\n      if (tabletype === 'AggregatedGenerationPerType' && productiontype !== null) {\n        url = 'https://b16d8614.ngrok.io//energy/api/AggregatedGenerationPerType/' + country + '/' + productiontype + '/' + resolution + '/' + date + '/' + dateinput;\n      }\n\n      console.log(url);\n\n      if (validation === true) {\n        fetch(url, {\n          method: 'GET',\n          headers: {\n            'X-OBSERVATORY-AUTH': this.context.token\n          }\n        }).then(response => {\n          console.log(response.status);\n\n          if (response.status === 401) {\n            response.text().then(resp => alert(resp));\n            this.props.history.push('/Logout');\n          } else if (response.status === 402) {\n            response.text().then(resp => alert(resp));\n          } else if (response.status === 403) {\n            response.text().then(resp => alert(resp));\n          } else if (response.status === 400) {\n            response.text().then(resp => alert(resp));\n          } else {\n            response.text().then(json => {\n              localStorage.setItem('data', json);\n\n              if (tabletype === 'ActualTotalLoad' && date === 'date') {\n                this.props.history.push('/ATLchart_date');\n              } else if (tabletype === 'ActualTotalLoad' && date === 'month') {\n                this.props.history.push('/ATLchart_month');\n              } else if (tabletype === 'ActualTotalLoad' && date === 'year') {\n                this.props.history.push('/ATLchart_year');\n              } else if (tabletype === 'AggregatedGenerationPerType' && date === 'date') {\n                this.props.history.push('/AggregatedDate');\n              } else if (tabletype === 'AggregatedGenerationPerType' && date === 'month') {\n                this.props.history.push('/AggregatedMonth');\n              } else if (tabletype === 'AggregatedGenerationPerType' && date === 'year') {\n                this.props.history.push('/AggregatedYear');\n              } else if (tabletype === 'DayAheadTotalLoadForecast' && date === 'date') {\n                this.props.history.push('/DayAheadchart_date');\n              } else if (tabletype === 'DayAheadTotalLoadForecast' && date === 'month') {\n                this.props.history.push('/DayAheadchart_month');\n              } else if (tabletype === 'DayAheadTotalLoadForecast' && date === 'year') {\n                this.props.history.push('/DayAheadchart_year');\n              } else if (tabletype === 'ActualvsForecast' && date === 'date') {\n                this.props.history.push('/ATLvsForecastchart_date');\n              } else if (tabletype === 'ActualvsForecast' && date === 'month') {\n                this.props.history.push('/ATLvsForecastchart_month');\n              } else if (tabletype === 'ActualvsForecast' && date === 'year') {\n                this.props.history.push('/ATLvsForecastchart_year');\n              }\n            });\n          }\n        });\n      }\n    };\n\n    this.handledateChange = event => {\n      this.setState({\n        date: event.target.value\n      });\n    };\n\n    this.handledateChangedateinput = event => {\n      this.setState({\n        dateinput: event.target.value\n      }); // document.getElementById(event.target.value).show().siblings().hide();\n    };\n\n    this.handledateChangetabletype = event => {\n      this.setState({\n        tabletype: event.target.value\n      });\n    };\n\n    this.handleChangeprodtype = event => {\n      console.log(\"IN HERE\");\n      console.log(event.target.value);\n      this.setState({\n        prodtype: event.target.value\n      });\n    };\n\n    this.state = {\n      date: \"date\",\n      dateinput: \"2018-01-01\",\n      tabletype: \"ActualTotalLoad\",\n      prodtype: \"AllTypes\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"\\u0394\\u03B5\\u03B4\\u03BF\\u03BC\\u03AD\\u03BD\\u03B1:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"dropdown1\",\n      ref: input => this.tabletype = input,\n      required: true,\n      onChange: this.handledateChangetabletype,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"ActualTotalLoad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"ActualTotalLoad\"), React.createElement(\"option\", {\n      value: \"AggregatedGenerationPerType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"AggregatedGenerationPerType\"), React.createElement(\"option\", {\n      value: \"DayAheadTotalLoadForecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"DayAheadTotalLoadForecast\"), React.createElement(\"option\", {\n      value: \"ActualvsForecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"ActualTotalLoadvsDayAheadTotalLoadForecast\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), this.state.tabletype === 'AggregatedGenerationPerType' && React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"\\u03A4\\u03CD\\u03C0\\u03BF\\u03C2 \\u03A0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"dropdownextra\",\n      ref: input => this.prodtype = input,\n      required: true,\n      onChange: this.handleChangeprodtype,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"AllTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"AllTypes\"), React.createElement(\"option\", {\n      value: \"AC Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"AC Link\"), React.createElement(\"option\", {\n      value: \"Biomass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Biomass\"), React.createElement(\"option\", {\n      value: \"DC Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"DC Link\"), React.createElement(\"option\", {\n      value: \"Fossil Brown coal/Lignite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Fossil Brown coal/Lignite\"), React.createElement(\"option\", {\n      value: \"Fossil Coal-derived gas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Fossil Coal-derived gas\"), React.createElement(\"option\", {\n      value: \"Fossil Gas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Fossil Gas\"), React.createElement(\"option\", {\n      value: \"Fossil Hard coal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Fossil Hard coal\"), React.createElement(\"option\", {\n      value: \"Fossil Oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Fossil Oil\"), React.createElement(\"option\", {\n      value: \"Fossil Oil shale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Fossil Oil shale\"), React.createElement(\"option\", {\n      value: \"Fossil Peat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Fossil Peat\"), React.createElement(\"option\", {\n      value: \"Geothermal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Geothermal\"), React.createElement(\"option\", {\n      value: \"Hydro Pumped Storage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Hydro Pumped Storage\"), React.createElement(\"option\", {\n      value: \"Hydro Run-of-river and poundage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Hydro Run-of-river and poundage\"), React.createElement(\"option\", {\n      value: \"Hydro Water Reservoir\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Hydro Water Reservoir\"), React.createElement(\"option\", {\n      value: \"Marine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Marine\"), React.createElement(\"option\", {\n      value: \"Nuclear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Nuclear\"), React.createElement(\"option\", {\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Other\"), React.createElement(\"option\", {\n      value: \"Other renewable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Other renewable\"), React.createElement(\"option\", {\n      value: \"Solar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Solar\"), React.createElement(\"option\", {\n      value: \"Substation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Substation\"), React.createElement(\"option\", {\n      value: \"Transformer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Transformer\"), React.createElement(\"option\", {\n      value: \"Waste\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Waste\"), React.createElement(\"option\", {\n      value: \"Wind Offshore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Wind Offshore\"), React.createElement(\"option\", {\n      value: \"Wind Onshore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Wind Onshore\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"\\u03A7\\u03CE\\u03C1\\u03B1:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"country\",\n      name: \"country\",\n      type: \"text\",\n      ref: input => this.country = input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"\\u03A7\\u03C1\\u03CC\\u03BD\\u03BF\\u03C2 \\u03B5\\u03BE\\u03AD\\u03C4\\u03B1\\u03C3\\u03B7\\u03C2:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"dropdown3\",\n      ref: input => this.resolution = input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"PT15M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"PT15M\"), React.createElement(\"option\", {\n      value: \"PT30M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"PT30M\"), React.createElement(\"option\", {\n      value: \"PT60M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"PT60M\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"\\u0391\\u03BD\\u03AC :\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"dropdown2\",\n      ref: input => this.date = input,\n      required: true,\n      onChange: this.handledateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"\\u0397\\u03BC\\u03AD\\u03C1\\u03B1\"), React.createElement(\"option\", {\n      value: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"\\u039C\\u03AE\\u03BD\\u03B1\"), React.createElement(\"option\", {\n      value: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"\\u03A7\\u03C1\\u03CC\\u03BD\\u03BF\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), this.state.date === 'date' && React.createElement(\"input\", {\n      id: \"date\",\n      name: \"date\",\n      type: \"text\",\n      placeholder: \"DD-MM-YYYY\",\n      value: this.state.email,\n      onChange: this.handledateChangedateinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), this.state.date === 'month' && React.createElement(\"input\", {\n      id: \"date\",\n      name: \"date\",\n      type: \"text\",\n      placeholder: \"MM-YYYY\",\n      value: this.state.email,\n      onChange: this.handledateChangedateinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), this.state.date === 'year' && React.createElement(\"input\", {\n      id: \"date\",\n      name: \"date\",\n      type: \"text\",\n      placeholder: \"YYYY\",\n      value: this.state.email,\n      onChange: this.handledateChangedateinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn btn-info\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"\\u03A5\\u03C0\\u03BF\\u03B2\\u03BF\\u03BB\\u03AE\"))));\n  }\n\n}\n\nATL.contextType = UserContext;\nexport default ATL;","map":{"version":3,"sources":["C:/Users/chris/Desktop/TL19-14/front-end/src/ATL.js"],"names":["React","Component","UserContext","ATL","constructor","props","show","validation","tabletype","value","country","resolution","date","productiontype","state","prodtype","console","log","dateinput","arr","split","year","undefined","month","day","length","setState","alert","url","fetch","method","headers","context","token","then","response","status","text","resp","history","push","json","localStorage","setItem","handledateChange","event","target","handledateChangedateinput","handledateChangetabletype","handleChangeprodtype","render","input","email","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import Select, { components } from 'react-select';\r\n// import Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport { UserContext } from './UserContext';\r\nimport './ATL.css';\r\n\r\nclass ATL extends Component {\r\n    static contextType = UserContext;\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={date:\"date\",\r\n                    dateinput:\"2018-01-01\",\r\n                    tabletype:\"ActualTotalLoad\",\r\n                    prodtype:\"AllTypes\"};\r\n    }\r\n\r\n        show=()=> {\r\n        var validation=true;\r\n        let tabletype = this.tabletype.value;\r\n        let country=this.country.value;\r\n        let resolution = this.resolution.value;\r\n        let date = this.date.value;\r\n        let productiontype;\r\n        if(this.state.prodtype!=null){\r\n            productiontype =this.state.prodtype;\r\n            console.log(productiontype);\r\n        }\r\n        let dateinput=this.state.dateinput;\r\n        var arr= dateinput.split('-');\r\n        var year=undefined,month=undefined,day=undefined;\r\n        if(arr.length==3){\r\n         year=arr[2];\r\n         month=arr[1];\r\n         day=arr[0];\r\n         dateinput=year+'-'+month+'-'+day;\r\n        } else if(arr.length==2){\r\n         year=arr[1];\r\n         month=arr[0];\r\n         dateinput=year+'-'+month;\r\n        } else if(arr.length==1){\r\n         year=arr[0];\r\n         dateinput=year;\r\n        }\r\n        console.log(month);\r\n        console.log(day);\r\n        console.log(year);\r\n        this.setState({validation:true});\r\n        if (day>31 || day<1 || month>12 || month<1 || year>2020 || year <1990 ){\r\n            validation=false;\r\n            alert(\"Invalid date given\");\r\n        }\r\n        else if (day!==undefined && (date==='month' || date==='year')){\r\n            validation=false;\r\n            alert(\"Invalid date given \");\r\n        }\r\n        else if (month!==undefined &&  date==='year'){\r\n            validation=false;\r\n            alert(\"Invalid date given\");\r\n        }\r\n        else if (date==='date' && (day===undefined || month===undefined || year===undefined)){\r\n            validation=false;\r\n            alert(\"Invalid date given\");\r\n        }\r\n        else if (date==='month' && (month===undefined || year===undefined)){\r\n            validation=false;\r\n            alert(\"Invalid date given\");\r\n        }\r\n        else if (date==='year' && (year===undefined)){\r\n            validation=false;\r\n            alert(\"Invalid date given\");\r\n        }\r\n        console.log(dateinput);\r\n        var url='https://b16d8614.ngrok.io//energy/api/'+this.state.tabletype+'/'+country+\"/\"+resolution+'/'+date+'/'+dateinput;\r\n        if(tabletype==='AggregatedGenerationPerType'&& productiontype!==null){\r\n            url='https://b16d8614.ngrok.io//energy/api/AggregatedGenerationPerType/'+country+'/'+productiontype+'/'+resolution+'/'+date+'/'+dateinput;\r\n        }\r\n        console.log(url);\r\n        if(validation===true){\r\n            fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-OBSERVATORY-AUTH':this.context.token,\r\n                },\r\n            }).then((response) =>{console.log(response.status);\r\n                if(response.status===401){\r\n                    response.text().then(resp => alert(resp));\r\n                    this.props.history.push('/Logout');\r\n                }else if(response.status===402){\r\n                    response.text().then(resp => alert(resp));\r\n                }else if(response.status===403){\r\n                    response.text().then(resp => alert(resp));\r\n                }else if(response.status===400){\r\n                    response.text().then(resp => alert(resp));\r\n                }\r\n                else{\r\n                    response.text().then(json=>{\r\n                    localStorage.setItem('data',json)\r\n                    if(tabletype==='ActualTotalLoad' && date==='date'){\r\n                        this.props.history.push('/ATLchart_date');}\r\n                    else if(tabletype==='ActualTotalLoad' && date==='month'){\r\n                        this.props.history.push('/ATLchart_month');}\r\n                    else if(tabletype==='ActualTotalLoad' && date==='year'){\r\n                        this.props.history.push('/ATLchart_year');}\r\n                    else if(tabletype==='AggregatedGenerationPerType' && date==='date'){\r\n                        this.props.history.push('/AggregatedDate');}\r\n                    else if(tabletype==='AggregatedGenerationPerType' && date==='month'){\r\n                        this.props.history.push('/AggregatedMonth');}\r\n                    else if(tabletype==='AggregatedGenerationPerType' && date==='year'){\r\n                        this.props.history.push('/AggregatedYear');}\r\n                    else if(tabletype==='DayAheadTotalLoadForecast' && date==='date'){\r\n                        this.props.history.push('/DayAheadchart_date');}\r\n                    else if(tabletype==='DayAheadTotalLoadForecast' && date==='month'){\r\n                        this.props.history.push('/DayAheadchart_month');}\r\n                    else if(tabletype==='DayAheadTotalLoadForecast' && date==='year'){\r\n                        this.props.history.push('/DayAheadchart_year');}\r\n                    else if(tabletype==='ActualvsForecast' && date==='date'){\r\n                        this.props.history.push('/ATLvsForecastchart_date');}\r\n                    else if(tabletype==='ActualvsForecast' && date==='month'){\r\n                        this.props.history.push('/ATLvsForecastchart_month');}\r\n                    else if(tabletype==='ActualvsForecast' && date==='year'){\r\n                        this.props.history.push('/ATLvsForecastchart_year');}})\r\n                }})\r\n        }\r\n    }\r\n\r\n    handledateChange=(event)=>{\r\n        this.setState({date:event.target.value});\r\n    }\r\n    \r\n    handledateChangedateinput=(event)=>{\r\n        this.setState({dateinput:event.target.value});\r\n\r\n        // document.getElementById(event.target.value).show().siblings().hide();\r\n    }\r\n    handledateChangetabletype=(event)=>{\r\n        this.setState({tabletype:event.target.value});\r\n    }\r\n\r\n    handleChangeprodtype=(event)=>{\r\n        console.log(\"IN HERE\")\r\n        console.log(event.target.value)\r\n        this.setState({prodtype:event.target.value});\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\t\t\t<div align=\"center\">\r\n                <label>\r\n                    Δεδομένα:\r\n\t\t\t\t\t<br></br>\r\n                <select id = \"dropdown1\" ref = {(input)=> this.tabletype = input} required  onChange={this.handledateChangetabletype}>\r\n                    <option value=\"ActualTotalLoad\">ActualTotalLoad</option>\r\n                    <option value=\"AggregatedGenerationPerType\">AggregatedGenerationPerType</option>\r\n                    <option value=\"DayAheadTotalLoadForecast\">DayAheadTotalLoadForecast</option>\r\n                    <option value=\"ActualvsForecast\">ActualTotalLoadvsDayAheadTotalLoadForecast</option>\r\n                </select>\r\n\t\t\t\t<br></br>\r\n                {this.state.tabletype==='AggregatedGenerationPerType' && <label>\r\n                        Τύπος Παραγωγής: <br></br>\r\n                    <select id = \"dropdownextra\" ref = {(input)=> this.prodtype = input} required onChange={this.handleChangeprodtype}>\r\n                        <option value=\"AllTypes\">AllTypes</option>\r\n                        <option value=\"AC Link\">AC Link</option>\r\n                        <option value=\"Biomass\">Biomass</option>\r\n                        <option value=\"DC Link\">DC Link</option>\r\n                        <option value=\"Fossil Brown coal/Lignite\">Fossil Brown coal/Lignite</option>\r\n                        <option value=\"Fossil Coal-derived gas\">Fossil Coal-derived gas</option>\r\n                        <option value=\"Fossil Gas\">Fossil Gas</option>\r\n                        <option value=\"Fossil Hard coal\">Fossil Hard coal</option>\r\n                        <option value=\"Fossil Oil\">Fossil Oil</option>\r\n                        <option value=\"Fossil Oil shale\">Fossil Oil shale</option>\r\n                        <option value=\"Fossil Peat\">Fossil Peat</option>\r\n                        <option value=\"Geothermal\">Geothermal</option>\r\n                        <option value=\"Hydro Pumped Storage\">Hydro Pumped Storage</option>\r\n                        <option value=\"Hydro Run-of-river and poundage\">Hydro Run-of-river and poundage</option>\r\n                        <option value=\"Hydro Water Reservoir\">Hydro Water Reservoir</option>\r\n                        <option value=\"Marine\">Marine</option>\r\n                        <option value=\"Nuclear\">Nuclear</option>\r\n                        <option value=\"Other\">Other</option>\r\n                        <option value=\"Other renewable\">Other renewable</option>\r\n                        <option value=\"Solar\">Solar</option>\r\n                        <option value=\"Substation\">Substation</option>\r\n                        <option value=\"Transformer\">Transformer</option>\r\n                        <option value=\"Waste\">Waste</option>\r\n                        <option value=\"Wind Offshore\">Wind Offshore</option>\r\n                        <option value=\"Wind Onshore\">Wind Onshore</option>\r\n                    </select>\r\n                    </label>}\r\n                \r\n                </label> \r\n\t\t\t\t<br></br>\r\n\r\n                <label>\r\n                    Χώρα:\r\n\t\t\t\t\t<br></br>\r\n                    <input id=\"country\" name=\"country\" type=\"text\"  ref = {(input)=> this.country = input} required />\r\n                </label> \r\n\t\t\t\t<br></br>\r\n\r\n                <label>\r\n                    Χρόνος εξέτασης:\r\n\t\t\t\t\t<br></br>\r\n                <select id = \"dropdown3\" ref = {(input)=> this.resolution = input} required>\r\n                    <option value=\"PT15M\">PT15M</option>\r\n                    <option value=\"PT30M\">PT30M</option>\r\n                    <option value=\"PT60M\">PT60M</option>\r\n                </select>\r\n                </label>\r\n\t\t\t\t<br></br>\r\n\r\n                <label>\r\n                    Ανά : \r\n\t\t\t\t\r\n\t\t\t\t<br></br>\r\n                    <select id = \"dropdown2\" ref = {(input)=> this.date = input}  required onChange={this.handledateChange}>\r\n\t\t\t\t\r\n\r\n                    {/* <select table={this.state.table} onChange={this.handleChange}> */}\r\n                    <option value=\"date\">Ημέρα</option>\r\n                    <option value=\"month\">Μήνα</option>\r\n                    <option value=\"year\">Χρόνο</option>\r\n                    </select>\r\n\t\t\t\t<br></br>\r\n\r\n                </label>\r\n\t\t\t\t<br></br>\r\n                {this.state.date==='date' &&  <input id=\"date\" name=\"date\" type=\"text\" placeholder=\"DD-MM-YYYY\" value={this.state.email} onChange={this.handledateChangedateinput}  />}\r\n                {this.state.date==='month' &&  <input id=\"date\" name=\"date\" type=\"text\" placeholder=\"MM-YYYY\" value={this.state.email} onChange={this.handledateChangedateinput}  />}\r\n                {this.state.date==='year' &&  <input id=\"date\" name=\"date\" type=\"text\" placeholder=\"YYYY\" value={this.state.email} onChange={this.handledateChangedateinput}  />}\r\n\r\n\t\t\t\t<br></br>\r\n                <form onSubmit={this.show}>\r\n\t\t\t\t\t<br></br>\r\n\r\n                    <button class=\"btn btn-info\" type=\"submit\" >\r\n                        Υποβολή \r\n                    </button>\r\n                </form>\r\n\t\t\t\t</div> \r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default ATL;\r\n"]},"metadata":{},"sourceType":"module"}