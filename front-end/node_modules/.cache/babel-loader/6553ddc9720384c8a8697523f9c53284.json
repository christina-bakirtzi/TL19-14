{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\TL19-14\\\\front-end\\\\src\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport { UserContext } from './UserContext';\nimport https from 'https';\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.username = React.createRef();\n    this.password = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    console.log('ref to username: ', this.username.current);\n    const u = this.username.current.value;\n    const p = this.password.current.value;\n    console.log('Submitting...', u, p);\n    const agent = new https.Agent({\n      rejectUnauthorized: true\n    });\n    fetch('https://b16d8614.ngrok.io/energy/api/Login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        \"username\": u,\n        \"password\": p\n      }),\n      agent\n    }).then(response => response.json()).then(json => {\n      console.log(json); //store the user's data in local storage\n      //to make them available for the next\n      //user's visit\n\n      localStorage.setItem('token', json.token);\n      localStorage.setItem('username', u); //use the setUserData function available\n      //through the UserContext\n\n      this.context.setUserData(json.token, u); //use the history prop available through\n      //the Route to programmatically navigate\n      //to another route            \n\n      this.props.history.push('/main');\n    }).catch(function (error) {\n      alert(\"Non valid username or password\");\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u038C\\u03BD\\u03BF\\u03BC\\u03B1 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7: \"), React.createElement(\"input\", {\n      id: \"username\",\n      type: \"text\",\n      ref: this.username,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\u039A\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC\\u03C2 \\u03A0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2: \"), React.createElement(\"input\", {\n      id: \"password\",\n      type: \"password\",\n      ref: this.password,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn btn-success\",\n      align: \"center\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\u03A3\\u03CD\\u03BD\\u03B4\\u03B5\\u03C3\\u03B7\"));\n  }\n\n}\nLogin.contextType = UserContext;\nexport class Logout extends Component {\n  doLogout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.context.setUserData(null, null);\n    this.props.history.push('/');\n  }\n\n  componentDidMount() {\n    //perform an ajax call to logout\n    //and then clean up local storage and\n    //context state.\n    console.log('TEST');\n    console.log(this.context.token);\n    fetch('https://b16d8614.ngrok.io/energy/api/Logout', {\n      method: 'POST',\n      headers: {\n        'X-OBSERVATORY-AUTH': this.context.token,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(() => this.doLogout());\n  }\n\n  render() {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Loggin out...\");\n  }\n\n}\nLogout.contextType = UserContext;","map":{"version":3,"sources":["C:/Users/chris/Desktop/TL19-14/front-end/src/Auth.js"],"names":["React","Component","UserContext","https","Login","constructor","props","username","createRef","password","handleSubmit","bind","event","console","log","current","u","value","p","agent","Agent","rejectUnauthorized","fetch","method","headers","body","URLSearchParams","then","response","json","localStorage","setItem","token","context","setUserData","history","push","catch","error","alert","preventDefault","render","contextType","Logout","doLogout","removeItem","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { UserContext } from './UserContext';\r\nimport https from 'https'\r\nexport class Login extends Component {        \r\n    \r\n    static contextType = UserContext;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.username = React.createRef();\r\n        this.password = React.createRef();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        console.log('ref to username: ', this.username.current);\r\n        \r\n        const u = this.username.current.value;\r\n        const p = this.password.current.value;\r\n        console.log('Submitting...', u, p);\r\n        const agent=new https.Agent({rejectUnauthorized:true})\r\n        fetch('https://b16d8614.ngrok.io/energy/api/Login',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type':'application/x-www-form-urlencoded',\r\n            },\r\n            body: new URLSearchParams({\r\n                \"username\": u,\r\n                \"password\": p\r\n            }),agent\r\n        }).then((response) => response.json())\r\n        .then(json => {   \r\n\r\n            console.log(json);\r\n\r\n            //store the user's data in local storage\r\n            //to make them available for the next\r\n            //user's visit\r\n            localStorage.setItem('token', json.token);\r\n            localStorage.setItem('username', u);\r\n\r\n            //use the setUserData function available\r\n            //through the UserContext\r\n            this.context.setUserData(json.token, u);\r\n            \r\n            //use the history prop available through\r\n            //the Route to programmatically navigate\r\n            //to another route            \r\n            this.props.history.push('/main');\r\n        }).catch( function(error) {alert(\"Non valid username or password\");});\r\n        \r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {        \r\n        return (                                    \r\n            <form onSubmit={this.handleSubmit}>\r\n\r\n                <label htmlFor=\"username\">Όνομα χρήστη: </label>\r\n                <input id=\"username\" type=\"text\" ref={this.username} required/>\r\n\t\t\t\t<br></br>\r\n                <label htmlFor=\"password\">Κωδικός Πρόσβασης: </label>\r\n                <input id=\"password\" type=\"password\" ref={this.password}  required/>\r\n\t\t\t\t<br></br>\r\n\r\n                <button class=\"btn btn-success\" align=\"center\" type=\"submit\">\r\n                    Σύνδεση\r\n                </button>\r\n            </form>\r\n        );        \r\n    }    \r\n}\r\nexport class Logout extends Component {\r\n    \r\n    static contextType = UserContext;\r\n    \r\n    doLogout() {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n                    \r\n        this.context.setUserData(null, null);\r\n        \r\n        this.props.history.push('/');\r\n    }\r\n    \r\n    componentDidMount() {\r\n        //perform an ajax call to logout\r\n        //and then clean up local storage and\r\n        //context state.\r\n        console.log('TEST')\r\n        console.log(this.context.token)\r\n\r\n        fetch('https://b16d8614.ngrok.io/energy/api/Logout',{\r\n            method: 'POST',\r\n            headers: {\r\n                'X-OBSERVATORY-AUTH': this.context.token,\r\n                'Content-Type':'application/x-www-form-urlencoded',\r\n            }\r\n        }).then(() => this.doLogout());\r\n    }\r\n    \r\n    render() {\r\n        return (<h2>Loggin out...</h2>);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}