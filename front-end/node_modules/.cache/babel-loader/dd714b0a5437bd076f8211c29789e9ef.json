{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\TL19-14\\\\front-end\\\\src\\\\ATL.js\";\nimport React, { Component } from 'react'; // import Select, { components } from 'react-select';\n// import Dropdown from 'react-dropdown';\n\nimport 'react-dropdown/style.css';\nimport { UserContext } from './UserContext';\n\nclass ATL extends Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => {\n      let tabletype = this.tabletype.value;\n      let country = this.country.value;\n      let resolution = this.resolution.value;\n      let date = this.date.value;\n      let productiontype;\n\n      if (this.state.prodtype != null) {\n        productiontype = this.state.prodtype;\n      }\n\n      let dateinput = this.state.dateinput;\n      let day = null;\n      let month = null;\n      let year = null;\n      [month, day, year] = dateinput.split('-');\n      var url = 'http://localhost:5000/energy/api/' + this.state.tabletype + '/' + country + \"/\" + resolution + '/' + date + '/' + dateinput;\n\n      if (tabletype === 'AggregatedGenerationPerType' && productiontype !== null) {\n        url = 'http://localhost:5000/energy/api/AggregatedGenerationPerType/' + country + '/' + productiontype + '/' + resolution + '/' + date + '/' + dateinput;\n      }\n\n      console.log(url);\n      console.log(this.state.validation);\n\n      if (this.state.validation === true) {\n        fetch(url, {\n          method: 'GET',\n          headers: {\n            'X-OBSERVATORY-AUTH': this.context.token\n          }\n        }).then(response => response.json()).then(json => {\n          /*{console.log(response);\r\n                    if(response.status===401){\r\n                        response.text().then(resp => alert(resp));\r\n                    }else if(response.status===402){\r\n                        response.text().then(resp => alert(resp));\r\n                    }else if(response.status===403){\r\n                        response.text().then(resp => alert(resp));\r\n                        // alert(reader);\r\n                    }\r\n                    else{*/\n          //let json=response.json;\n          // console.log(JSON.stringify(json));\n          localStorage.setItem('data', JSON.stringify(json)); //this.props.history.push('/ATLcharta');\n\n          if (tabletype === 'ActualTotalLoad' && date === 'date') {\n            this.props.history.push('/ATLchart_date');\n          } else if (tabletype === 'ActualTotalLoad' && date === 'month') {\n            this.props.history.push('/ATLchart_month');\n          } else if (tabletype === 'ActualTotalLoad' && date === 'year') {\n            this.props.history.push('/ATLchart_year');\n          } else if (tabletype === 'AggregatedGenerationPerType' && date === 'date') {\n            this.props.history.push('/AggregatedDate');\n          } else if (tabletype === 'AggregatedGenerationPerType' && date === 'month') {\n            this.props.history.push('/AggregatedMonth');\n          } else if (tabletype === 'AggregatedGenerationPerType' && date === 'year') {\n            this.props.history.push('/AggregatedYear');\n          } else if (tabletype === 'DayAheadTotalLoadForecast' && date === 'date') {\n            this.props.history.push('/Main');\n          } else if (tabletype === 'DayAheadTotalLoadForecast' && date === 'month') {\n            this.props.history.push('/Main');\n          } else if (tabletype === 'DayAheadTotalLoadForecast' && date === 'year') {\n            this.props.history.push('/DayAheadchart_year');\n          } else if (tabletype === 'ActualTotalLoadvsDayAheadTotalLoadForecast' && date === 'date') {\n            this.props.history.push('/ATLvsForecastchart_date');\n          } else if (tabletype === 'ActualTotalLoadvsDayAheadTotalLoadForecast' && date === 'month') {\n            this.props.history.push('/ATLvsForecastchart_month');\n          } else if (tabletype === 'ActualTotalLoadvsDayAheadTotalLoadForecast' && date === 'year') {\n            this.props.history.push('/ATLvsForecastchart_year');\n          } //}\n\n        });\n      }\n    };\n\n    this.handledateChange = event => {\n      this.setState({\n        date: event.target.value\n      });\n    };\n\n    this.handledateChangedateinput = event => {\n      this.setState({\n        dateinput: event.target.value\n      }); // document.getElementById(event.target.value).show().siblings().hide();\n    };\n\n    this.handledateChangetabletype = event => {\n      this.setState({\n        tabletype: event.target.value\n      });\n    };\n\n    this.handleChangeprodtype = event => {\n      console.log(\"IN HERE\");\n      console.log(event.target.value);\n      this.setState({\n        prodtype: event.target.value\n      });\n    };\n\n    this.state = {\n      validation: true,\n      date: \"date\",\n      dateinput: \"2018-01-01\",\n      tabletype: \"ActualTotalLoad\",\n      prodtype: \"Solar\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Table:\", React.createElement(\"select\", {\n      id: \"dropdown1\",\n      ref: input => this.tabletype = input,\n      required: true,\n      onChange: this.handledateChangetabletype,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"ActualTotalLoad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"ActualTotalLoad\"), React.createElement(\"option\", {\n      value: \"AggregatedGenerationPerType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"AggregatedGenerationPerType\"), React.createElement(\"option\", {\n      value: \"DayAheadTotalLoadForecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"DayAheadTotalLoadForecast\"), React.createElement(\"option\", {\n      value: \"ActualTotalLoadvsDayAheadTotalLoadForecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"ActualTotalLoadvsDayAheadTotalLoadForecast\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), this.state.tabletype === 'AggregatedGenerationPerType' && React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Production type:\", React.createElement(\"select\", {\n      id: \"dropdownextra\",\n      ref: input => this.prodtype = input,\n      required: true,\n      onChange: this.handleChangeprodtype,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Solar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Solar\"), React.createElement(\"option\", {\n      value: \"Gas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Gas\"), React.createElement(\"option\", {\n      value: \"Oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Oil\"), React.createElement(\"option\", {\n      value: \"AllTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"AllTypes\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\u03A7\\u03CE\\u03C1\\u03B1:\", React.createElement(\"select\", {\n      id: \"dropdown1\",\n      ref: input => this.country = input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Greece\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Greece\"), React.createElement(\"option\", {\n      value: \"Austria\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Austria\"), React.createElement(\"option\", {\n      value: \"Germany\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Germany\"), React.createElement(\"option\", {\n      value: \"Italy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Italy\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\\u03A7\\u03C1\\u03CC\\u03BD\\u03BF\\u03C2 \\u03B5\\u03BE\\u03AD\\u03C4\\u03B1\\u03C3\\u03B7\\u03C2:\", React.createElement(\"select\", {\n      id: \"dropdown3\",\n      ref: input => this.resolution = input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"PT15M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"PT15M\"), React.createElement(\"option\", {\n      value: \"PT30M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"PT30M\"), React.createElement(\"option\", {\n      value: \"PT60M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"PT60M\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"\\u0393\\u03B9\\u03B1 \\u03C4\\u03B7\\u03BD/\\u03C4\\u03BF\\u03BD :\", React.createElement(\"select\", {\n      id: \"dropdown2\",\n      ref: input => this.date = input,\n      required: true,\n      onChange: this.handledateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"\\u0397\\u03BC\\u03AD\\u03C1\\u03B1\"), React.createElement(\"option\", {\n      value: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"\\u039C\\u03AE\\u03BD\\u03B1\"), React.createElement(\"option\", {\n      value: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"\\u03A7\\u03C1\\u03CC\\u03BD\\u03BF\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), this.state.date === 'date' && React.createElement(\"input\", {\n      id: \"date\",\n      name: \"date\",\n      type: \"text\",\n      placeholder: \"YYYY-MM-DD\",\n      value: this.state.email,\n      onChange: this.handledateChangedateinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), this.state.date === 'month' && React.createElement(\"input\", {\n      id: \"date\",\n      name: \"date\",\n      type: \"text\",\n      placeholder: \"YYYY-MM\",\n      value: this.state.email,\n      onChange: this.handledateChangedateinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), this.state.date === 'year' && React.createElement(\"input\", {\n      id: \"date\",\n      name: \"date\",\n      type: \"text\",\n      placeholder: \"YYYY\",\n      value: this.state.email,\n      onChange: this.handledateChangedateinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"\\u03A5\\u03C0\\u03BF\\u03B2\\u03BF\\u03BB\\u03AE\"))) //   <form onSubmit={this.handleSubmit}>\n    // <label>\n    //   Choose country of interest:\n    //   <select talbe={this.state.table} onChange={this.handleChange}>\n    //     <option table=\"ActualTotalLoad\">ActualTotalLoad</option>\n    //     <option table=\"AggregatedGenerationType\">AggregatedGenerationType</option>\n    //     <option table=\"DayAheadTotalLoadForest\">DayAheadTotalLoadForest</option>\n    //     <option table=\"ActualTotalLoadvsDayAheadTotalLoadForecast\">ActualTotalLoadvsDayAheadTotalLoadForecast</option>\n    //   </select>\n    // </label>\n    //     <label>\n    //       Choose PT of interest:\n    //       <select rs={this.state.rs} onChange={this.handleChange}>\n    //         <option rs=\"PT15M\">PT15M</option>\n    //         <option rs=\"PT30M\">PT30M</option>\n    //         <option rs=\"PT60M\">PT60M</option>\n    //       </select>\n    //     </label>\n    //     <input type=\"submit\"/>\n    //   </form>\n    ;\n  }\n\n}\n\nATL.contextType = UserContext;\nexport default ATL;","map":{"version":3,"sources":["C:/Users/chris/Desktop/TL19-14/front-end/src/ATL.js"],"names":["React","Component","UserContext","ATL","constructor","props","show","tabletype","value","country","resolution","date","productiontype","state","prodtype","dateinput","day","month","year","split","url","console","log","validation","fetch","method","headers","context","token","then","response","json","localStorage","setItem","JSON","stringify","history","push","handledateChange","event","setState","target","handledateChangedateinput","handledateChangetabletype","handleChangeprodtype","render","input","email","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import Select, { components } from 'react-select';\r\n// import Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport { UserContext } from './UserContext';\r\n\r\n\r\nclass ATL extends Component {\r\n    static contextType = UserContext;\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={validation:true,\r\n                    date:\"date\",\r\n                    dateinput:\"2018-01-01\",\r\n                    tabletype:\"ActualTotalLoad\",\r\n                    prodtype:\"Solar\"};\r\n    }\r\n\r\n    show=()=> {\r\n        let tabletype = this.tabletype.value;\r\n        let country=this.country.value;\r\n        let resolution = this.resolution.value;\r\n        let date = this.date.value;\r\n        let productiontype;\r\n        if(this.state.prodtype!=null){\r\n            productiontype =this.state.prodtype;\r\n        }\r\n        let dateinput=this.state.dateinput\r\n        let day=null;\r\n        let month=null;\r\n        let year =null;\r\n        [month, day, year] = dateinput.split('-');\r\n        \r\n        var url='http://localhost:5000/energy/api/'+this.state.tabletype+'/'+country+\"/\"+resolution+'/'+date+'/'+dateinput;\r\n        if(tabletype==='AggregatedGenerationPerType'&& productiontype!==null){\r\n            url='http://localhost:5000/energy/api/AggregatedGenerationPerType/'+country+'/'+productiontype+'/'+resolution+'/'+date+'/'+dateinput;\r\n        }\r\n        console.log(url);\r\n        console.log(this.state.validation)\r\n\r\n        if(this.state.validation===true){\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                'X-OBSERVATORY-AUTH':this.context.token,\r\n            },\r\n        }).then((response) => response.json())\r\n\t\t.then(json=>{\r\n\t\t/*{console.log(response);\r\n            if(response.status===401){\r\n                response.text().then(resp => alert(resp));\r\n            }else if(response.status===402){\r\n                response.text().then(resp => alert(resp));\r\n            }else if(response.status===403){\r\n                response.text().then(resp => alert(resp));\r\n                // alert(reader);\r\n            }\r\n            else{*/\r\n\r\n\t\t//let json=response.json;\r\n        // console.log(JSON.stringify(json));\r\n        localStorage.setItem('data',JSON.stringify(json));\r\n\t\t//this.props.history.push('/ATLcharta');\r\n        if(tabletype==='ActualTotalLoad' && date==='date'){\r\n\t\t\tthis.props.history.push('/ATLchart_date');}\r\n\t\telse if(tabletype==='ActualTotalLoad' && date==='month'){\r\n\t\t\tthis.props.history.push('/ATLchart_month');}\r\n\t\telse if(tabletype==='ActualTotalLoad' && date==='year'){\r\n\t\t\tthis.props.history.push('/ATLchart_year');}\r\n\t\telse if(tabletype==='AggregatedGenerationPerType' && date==='date'){\r\n\t\t\tthis.props.history.push('/AggregatedDate');}\r\n\t\telse if(tabletype==='AggregatedGenerationPerType' && date==='month'){\r\n\t\t\tthis.props.history.push('/AggregatedMonth');}\r\n\t\telse if(tabletype==='AggregatedGenerationPerType' && date==='year'){\r\n\t\t\tthis.props.history.push('/AggregatedYear');}\r\n\t\telse if(tabletype==='DayAheadTotalLoadForecast' && date==='date'){\r\n\t\t\tthis.props.history.push('/Main');}\r\n\t\telse if(tabletype==='DayAheadTotalLoadForecast' && date==='month'){\r\n\t\t\tthis.props.history.push('/Main');}\r\n\t\telse if(tabletype==='DayAheadTotalLoadForecast' && date==='year'){\r\n\t\t\tthis.props.history.push('/DayAheadchart_year');}\r\n\t\telse if(tabletype==='ActualTotalLoadvsDayAheadTotalLoadForecast' && date==='date'){\r\n\t\t\tthis.props.history.push('/ATLvsForecastchart_date');}\r\n\t\telse if(tabletype==='ActualTotalLoadvsDayAheadTotalLoadForecast' && date==='month'){\r\n\t\t\tthis.props.history.push('/ATLvsForecastchart_month');}\r\n\t\telse if(tabletype==='ActualTotalLoadvsDayAheadTotalLoadForecast' && date==='year'){\r\n\t\t\tthis.props.history.push('/ATLvsForecastchart_year');}\r\n\t\t\t\r\n        //}\r\n\t\t})}\r\n    }\r\n\r\n    handledateChange=(event)=>{\r\n        this.setState({date:event.target.value});\r\n    }\r\n    \r\n    handledateChangedateinput=(event)=>{\r\n        this.setState({dateinput:event.target.value});\r\n\r\n        // document.getElementById(event.target.value).show().siblings().hide();\r\n    }\r\n    handledateChangetabletype=(event)=>{\r\n        this.setState({tabletype:event.target.value});\r\n    }\r\n\r\n    handleChangeprodtype=(event)=>{\r\n        console.log(\"IN HERE\")\r\n        console.log(event.target.value)\r\n        this.setState({prodtype:event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <label>\r\n                    Table:\r\n                <select id = \"dropdown1\" ref = {(input)=> this.tabletype = input} required  onChange={this.handledateChangetabletype}>\r\n                    <option value=\"ActualTotalLoad\">ActualTotalLoad</option>\r\n                    <option value=\"AggregatedGenerationPerType\">AggregatedGenerationPerType</option>\r\n                    <option value=\"DayAheadTotalLoadForecast\">DayAheadTotalLoadForecast</option>\r\n                    <option value=\"ActualTotalLoadvsDayAheadTotalLoadForecast\">ActualTotalLoadvsDayAheadTotalLoadForecast</option>\r\n                </select>\r\n\t\t\t\t<br></br>\r\n                {this.state.tabletype==='AggregatedGenerationPerType' && <label>\r\n                        Production type:\r\n                    <select id = \"dropdownextra\" ref = {(input)=> this.prodtype = input} required onChange={this.handleChangeprodtype}>\r\n                        <option value=\"Solar\">Solar</option>\r\n                        <option value=\"Gas\">Gas</option>\r\n                        <option value=\"Oil\">Oil</option>\r\n                        <option value=\"AllTypes\">AllTypes</option>\r\n\r\n                    </select>\r\n                    </label>}\r\n                \r\n                </label> \r\n\t\t\t\t<br></br>\r\n\r\n                <label>\r\n                    Χώρα:\r\n                <select id = \"dropdown1\" ref = {(input)=> this.country = input} required>\r\n                    <option value=\"Greece\">Greece</option>\r\n                    <option value=\"Austria\">Austria</option>\r\n                    <option value=\"Germany\">Germany</option>\r\n                    <option value=\"Italy\">Italy</option>\r\n                </select>\r\n                </label> \r\n\t\t\t\t<br></br>\r\n\r\n                <label>\r\n                    Χρόνος εξέτασης:\r\n                <select id = \"dropdown3\" ref = {(input)=> this.resolution = input} required>\r\n                    <option value=\"PT15M\">PT15M</option>\r\n                    <option value=\"PT30M\">PT30M</option>\r\n                    <option value=\"PT60M\">PT60M</option>\r\n                </select>\r\n                </label>\r\n\t\t\t\t<br></br>\r\n\r\n                <label>\r\n                    Για την/τον : \r\n\t\t\t\t\r\n\r\n                    <select id = \"dropdown2\" ref = {(input)=> this.date = input}  required onChange={this.handledateChange}>\r\n\t\t\t\t\r\n\r\n                    {/* <select table={this.state.table} onChange={this.handleChange}> */}\r\n                    <option value=\"date\">Ημέρα</option>\r\n                    <option value=\"month\">Μήνα</option>\r\n                    <option value=\"year\">Χρόνο</option>\r\n                    </select>\r\n\t\t\t\t<br></br>\r\n\r\n                </label>\r\n\t\t\t\t<br></br>\r\n                {this.state.date==='date' &&  <input id=\"date\" name=\"date\" type=\"text\" placeholder=\"YYYY-MM-DD\" value={this.state.email} onChange={this.handledateChangedateinput}  />}\r\n                {this.state.date==='month' &&  <input id=\"date\" name=\"date\" type=\"text\" placeholder=\"YYYY-MM\" value={this.state.email} onChange={this.handledateChangedateinput}  />}\r\n                {this.state.date==='year' &&  <input id=\"date\" name=\"date\" type=\"text\" placeholder=\"YYYY\" value={this.state.email} onChange={this.handledateChangedateinput}  />}\r\n\r\n                {/* <label>\r\n                    Ημερομηνία \r\n                <input id=\"date\" name=\"date\" type=\"text\" placeholder=\"DD-MM-YYYY\" value={this.state.email} onChange={this.handledateChange}  />\r\n                <input id=\"month\" name=\"month\" type=\"text\" placeholder=\"MM-YYYY\" value={this.state.email} onChange={this.handledateChange}  />\r\n                </label> */}\r\n\t\t\t\t<br></br>\r\n                <form onSubmit={this.show}>\r\n                    <button className=\"btn btn-primary\" type=\"submit\" >\r\n                        Υποβολή \r\n                    </button>\r\n                </form>\r\n            </React.Fragment>\r\n\r\n    //   <form onSubmit={this.handleSubmit}>\r\n        // <label>\r\n        //   Choose country of interest:\r\n        //   <select talbe={this.state.table} onChange={this.handleChange}>\r\n        //     <option table=\"ActualTotalLoad\">ActualTotalLoad</option>\r\n        //     <option table=\"AggregatedGenerationType\">AggregatedGenerationType</option>\r\n        //     <option table=\"DayAheadTotalLoadForest\">DayAheadTotalLoadForest</option>\r\n        //     <option table=\"ActualTotalLoadvsDayAheadTotalLoadForecast\">ActualTotalLoadvsDayAheadTotalLoadForecast</option>\r\n        //   </select>\r\n        // </label>\r\n    //     <label>\r\n    //       Choose PT of interest:\r\n    //       <select rs={this.state.rs} onChange={this.handleChange}>\r\n    //         <option rs=\"PT15M\">PT15M</option>\r\n    //         <option rs=\"PT30M\">PT30M</option>\r\n    //         <option rs=\"PT60M\">PT60M</option>\r\n    //       </select>\r\n    //     </label>\r\n\r\n    //     <input type=\"submit\"/>\r\n    //   </form>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default ATL;\r\n"]},"metadata":{},"sourceType":"module"}